"""
Commandes pr√©fix√©es - Module help (syst√®me d'aide)
"""
from bot_owner_manager import is_bot_owner
import discord
from discord.ext import commands
from datetime import datetime
import os
import sys
sys.path.append(os.path.dirname(os.path.dirname(__file__)))


class HelpPrefixe(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.command(name="help", help="Affiche l'aide du bot")
    async def help_command(self, ctx, *, command: str = None):
        """Affiche l'aide g√©n√©rale ou sp√©cifique √† une commande"""
        if command:
            # Aide sp√©cifique √† une commande
            cmd = self.bot.get_command(command)
            if cmd:
                embed = discord.Embed(
                    title=f"üìñ Aide - {cmd.name}",
                    description=cmd.help or "Aucune description disponible",
                    color=discord.Color.blue(),
                    timestamp=datetime.utcnow()
                )

                embed.add_field(
                    name="üìù Usage",
                    value=f"`{ctx.prefix}{cmd.name} {cmd.signature}`",
                    inline=False
                )

                if cmd.aliases:
                    embed.add_field(
                        name="üîÑ Aliases",
                        value=", ".join(
                            [f"`{alias}`" for alias in cmd.aliases]),
                        inline=False
                    )

                await ctx.send(embed=embed)
            else:
                await ctx.send(f"‚ùå Commande `{command}` introuvable.")
        else:
            # Aide g√©n√©rale
            embed = await self.create_main_help_embed(ctx)
            await ctx.send(embed=embed)

    async def create_main_help_embed(self, ctx):
        """Cr√©e l'embed d'aide principal"""
        embed = discord.Embed(
            title="ü§ñ Aide du Bot Discord",
            description=f"Voici toutes les commandes disponibles. Pr√©fixe actuel: `{ctx.prefix}`",
            color=discord.Color.gold(),
            timestamp=datetime.utcnow()
        )

        embed.set_thumbnail(url=self.bot.user.display_avatar.url)

        # Commandes g√©n√©rales
        embed.add_field(
            name="üí¨ Commandes G√©n√©rales",
            value="""
            `{0}help` - Affiche cette aide
            `{0}bonjour` - Dit bonjour
            """.format(ctx.prefix),
            inline=False
        )

        # Gestion des pr√©fixes
        embed.add_field(
            name="üõ†Ô∏è Gestion du Pr√©fixe",
            value="""
            `{0}prefix` - G√®re le pr√©fixe du bot
            `{0}prefix set <nouveau>` - Change le pr√©fixe (G√©rer le serveur)
            `{0}prefix reset` - Remet le pr√©fixe par d√©faut
            `{0}prefix info` - Infos sur les pr√©fixes
            """.format(ctx.prefix),
            inline=False
        )

        # Syst√®me de logs
        embed.add_field(
            name="üìä Syst√®me de Logs",
            value="""
            `{0}setlog <canal>` - D√©finit le canal de logs (G√©rer le serveur)
            `{0}logon` - Active les logs (G√©rer le serveur)
            `{0}logoff` - D√©sactive les logs (G√©rer le serveur)
            `{0}logstatus` - Statut des logs
            `{0}testlog` - Test le syst√®me de logs (G√©rer le serveur)
            """.format(ctx.prefix),
            inline=False
        )

        # Mod√©ration
        embed.add_field(
            name="üõ°Ô∏è Mod√©ration",
            value="""
            `{0}ban <membre> [raison]` - Bannit un membre (Bannir)
            `{0}unban <user_id> [raison]` - D√©bannit (Bannir)
            `{0}kick <membre> [raison]` - Expulse un membre (Expulser)
            `{0}mute <membre> [dur√©e] [raison]` - Mute (Mod√©rer)
            `{0}unmute <membre> [raison]` - Unmute (Mod√©rer)
            """.format(ctx.prefix),
            inline=False
        )

        # Gestion des r√¥les
        embed.add_field(
            name="üé≠ Gestion des R√¥les",
            value="""
            `{0}addrole <membre> <r√¥le>` - Ajoute un r√¥le (G√©rer les r√¥les)
            `{0}removerole <membre> <r√¥le>` - Retire un r√¥le (G√©rer les r√¥les)
            `{0}roles [membre]` - Affiche les r√¥les
            """.format(ctx.prefix),
            inline=False
        )

        # Informations
        embed.add_field(
            name="üìã Informations",
            value="""
            `{0}info [membre]` - Infos sur un membre
            `{0}server` - Infos sur le serveur
            `{0}avatar [membre]` - Avatar d'un utilisateur
            `{0}uptime` - Temps de fonctionnement du bot
            `{0}botinfo` - Informations d√©taill√©es du bot
            """.format(ctx.prefix),
            inline=False
        )

        # Utilitaires
        embed.add_field(
            name="‚öôÔ∏è Utilitaires",
            value="""
            `{0}ping` - Latence du bot
            """.format(ctx.prefix),
            inline=False
        )

        # Divertissement
        embed.add_field(
            name="üéÆ Divertissement",
            value="""
            `{0}coinflip` - Lance une pi√®ce
            `{0}8ball <question>` - Boule magique
            `{0}rps <choix>` - Pierre-papier-ciseaux
            `{0}choose <options>` - Choix al√©atoire
            `{0}joke` - Blague al√©atoire
            `{0}quote` - Citation inspirante
            `{0}compliment [membre]` - Compliment
            """.format(ctx.prefix),
            inline=False
        )

        # Outils avanc√©s
        embed.add_field(
            name="üîß Outils Avanc√©s",
            value="""
            `{0}analyze [utilisateur]` - Analyse serveur/utilisateur
            `{0}clean <nombre> [filtres]` - Nettoyage intelligent
            `{0}remind <temps> <message>` - Rappels programm√©s
            `{0}poll [dur√©e] "question" options` - Sondages avanc√©s
            `{0}count <texte>` - Statistiques de texte
            """.format(ctx.prefix),
            inline=False
        )

        # Commandes propri√©taires (seulement visible par les propri√©taires)
        if is_bot_owner(ctx.author.id):
            embed.add_field(
                name="üëë Commandes Propri√©taires",
                value=f"""
                `{ctx.prefix}annonce <message>` - Envoie une annonce √† tous les propri√©taires de serveurs
                """,
                inline=False
            )

        # Footer avec infos utiles
        embed.add_field(
            name="üí° Infos Utiles",
            value=f"""
            ‚Ä¢ Tu peux aussi me mentionner: {self.bot.user.mention}
            ‚Ä¢ Commandes slash disponibles: tapez `/`
            ‚Ä¢ Les permissions sont indiqu√©es entre parenth√®ses
            ‚Ä¢ Usage: `{ctx.prefix}help <commande>` pour plus de d√©tails
            """,
            inline=False
        )

        embed.set_footer(
            text=f"Bot cr√©√© avec ‚ù§Ô∏è ‚Ä¢ {len(self.bot.commands)} commandes pr√©fix√©es ‚Ä¢ {len([cmd for cmd in self.bot.tree.walk_commands()])} commandes slash")

        return embed


async def setup(bot):
    """Fonction pour charger le cog"""
    await bot.add_cog(HelpPrefixe(bot))
    print("‚úÖ Module prefixe/help charg√©")
