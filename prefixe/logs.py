"""
Commandes pr√©fix√©es - Module logs (gestion des logs)
"""
import discord
from discord.ext import commands
from log_manager import log_manager


class LogsPrefixe(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.command(name="setlog", help="D√©finit le canal de logs")
    @commands.guild_only()
    @commands.has_permissions(manage_guild=True)
    async def setlog(self, ctx, channel: discord.TextChannel):
        """D√©finit le canal o√π envoyer les logs"""
        success, message = log_manager.set_log_channel(
            ctx.guild.id, channel.id)

        if success:
            embed = discord.Embed(
                title="‚úÖ Canal de Logs Configur√©",
                description=message,
                color=discord.Color.green()
            )
            embed.add_field(
                name="üìã Prochaines √©tapes",
                value="Utilisez `logon` pour activer les logs",
                inline=False
            )
            embed.add_field(
                name="üìä Types de logs",
                value="Messages, membres, vocal, mod√©ration, canaux...",
                inline=False
            )
        else:
            embed = discord.Embed(
                title="‚ùå Erreur",
                description=message,
                color=discord.Color.red()
            )

        await ctx.send(embed=embed)

    @commands.command(name="logon", help="Active les logs pour ce serveur")
    @commands.guild_only()
    @commands.has_permissions(manage_guild=True)
    async def logon(self, ctx):
        """Active le syst√®me de logs"""
        success, message = log_manager.enable_logs(ctx.guild.id)

        if success:
            channel_id = log_manager.get_log_channel(ctx.guild.id)
            embed = discord.Embed(
                title="‚úÖ Logs Activ√©s",
                description=message,
                color=discord.Color.green()
            )
            embed.add_field(
                name="üìç Canal de logs",
                value=f"<#{channel_id}>",
                inline=False
            )
            embed.add_field(
                name="üìä √âv√©nements surveill√©s",
                value="""
                ‚Ä¢ üí¨ Messages (suppression, modification)
                ‚Ä¢ üë• Membres (arriv√©e, d√©part, r√¥les)
                ‚Ä¢ üîä Vocal (connexion, d√©connexion, changement)
                ‚Ä¢ üî® Mod√©ration (ban, unban)
                ‚Ä¢ üìù Canaux (cr√©ation, suppression)
                """,
                inline=False
            )
        else:
            embed = discord.Embed(
                title="‚ùå Erreur",
                description=message,
                color=discord.Color.red()
            )

        await ctx.send(embed=embed)

    @commands.command(name="logoff", help="D√©sactive les logs pour ce serveur")
    @commands.guild_only()
    @commands.has_permissions(manage_guild=True)
    async def logoff(self, ctx):
        """D√©sactive le syst√®me de logs"""
        success, message = log_manager.disable_logs(ctx.guild.id)

        if success:
            embed = discord.Embed(
                title="‚ö†Ô∏è Logs D√©sactiv√©s",
                description=message,
                color=discord.Color.orange()
            )
            embed.add_field(
                name="‚ÑπÔ∏è Note",
                value="Le canal de logs reste configur√©. Utilisez `logon` pour r√©activer.",
                inline=False
            )
        else:
            embed = discord.Embed(
                title="‚ùå Erreur",
                description="Impossible de d√©sactiver les logs",
                color=discord.Color.red()
            )

        await ctx.send(embed=embed)

    @commands.command(name="logstatus", help="Affiche le statut des logs")
    @commands.guild_only()
    async def logstatus(self, ctx):
        """Affiche le statut actuel du syst√®me de logs"""
        is_enabled = log_manager.is_logging_enabled(ctx.guild.id)
        channel_id = log_manager.get_log_channel(ctx.guild.id)

        if is_enabled and channel_id:
            embed = discord.Embed(
                title="üìä Statut des Logs",
                description="‚úÖ **Logs activ√©s**",
                color=discord.Color.green()
            )
            embed.add_field(
                name="üìç Canal configur√©",
                value=f"<#{channel_id}>",
                inline=False
            )
        elif channel_id:
            embed = discord.Embed(
                title="üìä Statut des Logs",
                description="‚ö†Ô∏è **Canal configur√© mais logs d√©sactiv√©s**",
                color=discord.Color.orange()
            )
            embed.add_field(
                name="üìç Canal configur√©",
                value=f"<#{channel_id}>",
                inline=False
            )
            embed.add_field(
                name="üí° Action requise",
                value="Utilisez `logon` pour activer les logs",
                inline=False
            )
        else:
            embed = discord.Embed(
                title="üìä Statut des Logs",
                description="‚ùå **Logs non configur√©s**",
                color=discord.Color.red()
            )
            embed.add_field(
                name="üí° Configuration requise",
                value="Utilisez `setlog <canal>` puis `logon`",
                inline=False
            )

        await ctx.send(embed=embed)

    # Gestion des erreurs
    @setlog.error
    async def setlog_error(self, ctx, error):
        """Gestion des erreurs pour setlog"""
        if isinstance(error, commands.MissingPermissions):
            embed = discord.Embed(
                title="‚ùå Permissions Insuffisantes",
                description="Tu as besoin de la permission `G√©rer le serveur` pour configurer les logs.",
                color=discord.Color.red()
            )
            await ctx.send(embed=embed)
        elif isinstance(error, commands.MissingRequiredArgument):
            embed = discord.Embed(
                title="‚ùå Argument Manquant",
                description="Usage: `setlog <#canal>`\nExemple: `setlog #logs`",
                color=discord.Color.red()
            )
            await ctx.send(embed=embed)
        elif isinstance(error, commands.ChannelNotFound):
            embed = discord.Embed(
                title="‚ùå Canal Introuvable",
                description="Le canal sp√©cifi√© n'existe pas ou n'est pas accessible.",
                color=discord.Color.red()
            )
            await ctx.send(embed=embed)

    @logon.error
    @logoff.error
    async def log_toggle_error(self, ctx, error):
        """Gestion des erreurs pour logon/logoff"""
        if isinstance(error, commands.MissingPermissions):
            embed = discord.Embed(
                title="‚ùå Permissions Insuffisantes",
                description="Tu as besoin de la permission `G√©rer le serveur` pour g√©rer les logs.",
                color=discord.Color.red()
            )
            await ctx.send(embed=embed)


async def setup(bot):
    """Fonction pour charger le cog"""
    await bot.add_cog(LogsPrefixe(bot))
    print("‚úÖ Module prefixe/logs charg√©")
