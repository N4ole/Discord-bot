"""
Commandes pr√©fix√©es - Module de gestion des propri√©taires (r√©serv√© aux propri√©taires du bot)
"""
from bot_owner_manager import is_bot_owner, get_bot_owners, add_bot_owner, remove_bot_owner
import discord
from discord.ext import commands
import os
import sys
sys.path.append(os.path.dirname(os.path.dirname(__file__)))


class OwnerManagementPrefixe(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.group(name="owner", help="Gestion des propri√©taires du bot (propri√©taires uniquement)", invoke_without_command=True)
    async def owner(self, ctx):
        """Commande principale de gestion des propri√©taires"""
        if not is_bot_owner(ctx.author.id):
            await ctx.send("‚ùå Cette commande est r√©serv√©e aux propri√©taires du bot.")
            return

        await ctx.send_help('owner')

    @owner.command(name="list", help="Affiche la liste des propri√©taires")
    async def owner_list(self, ctx):
        """Affiche la liste des propri√©taires du bot"""
        if not is_bot_owner(ctx.author.id):
            await ctx.send("‚ùå Cette commande est r√©serv√©e aux propri√©taires du bot.")
            return

        owners = get_bot_owners()

        if not owners:
            await ctx.send("‚ùå Aucun propri√©taire configur√©.")
            return

        embed = discord.Embed(
            title="üëë Propri√©taires du Bot",
            description="Liste des utilisateurs autoris√©s √† utiliser les commandes de propri√©taire",
            color=discord.Color.gold()
        )

        owner_list = []
        for i, owner_id in enumerate(owners, 1):
            try:
                user = await self.bot.fetch_user(owner_id)
                owner_list.append(f"{i}. **{user.name}** (`{user.id}`)")
            except discord.NotFound:
                owner_list.append(
                    f"{i}. **Utilisateur inconnu** (`{owner_id}`)")
            except Exception:
                owner_list.append(
                    f"{i}. **ID: {owner_id}** (impossible de r√©cup√©rer les infos)")

        embed.add_field(
            name=f"üìã {len(owners)} propri√©taire(s)",
            value="\n".join(
                owner_list) if owner_list else "Aucun propri√©taire",
            inline=False
        )

        embed.set_footer(text=f"Demand√© par {ctx.author}")
        embed.timestamp = discord.utils.utcnow()

        await ctx.send(embed=embed)

    @owner.command(name="add", help="Ajoute un propri√©taire (ID Discord)")
    async def owner_add(self, ctx, user_id: int = None):
        """Ajoute un utilisateur √† la liste des propri√©taires"""
        if not is_bot_owner(ctx.author.id):
            await ctx.send("‚ùå Cette commande est r√©serv√©e aux propri√©taires du bot.")
            return

        if user_id is None:
            await ctx.send("‚ùå Veuillez sp√©cifier l'ID Discord de l'utilisateur √† ajouter.\n"
                           "Exemple: `!owner add 123456789012345678`")
            return

        # V√©rifier si l'utilisateur existe
        try:
            user = await self.bot.fetch_user(user_id)
        except discord.NotFound:
            await ctx.send("‚ùå Utilisateur introuvable avec cet ID.")
            return
        except Exception as e:
            await ctx.send(f"‚ùå Erreur lors de la v√©rification de l'utilisateur: {str(e)}")
            return

        # V√©rifier si l'utilisateur est d√©j√† propri√©taire
        if is_bot_owner(user_id):
            await ctx.send(f"‚ö†Ô∏è **{user.name}** (`{user_id}`) est d√©j√† propri√©taire du bot.")
            return

        # Ajouter le propri√©taire
        if add_bot_owner(user_id):
            embed = discord.Embed(
                title="‚úÖ Propri√©taire Ajout√©",
                description=f"**{user.name}** a √©t√© ajout√© √† la liste des propri√©taires du bot.",
                color=discord.Color.green()
            )

            embed.add_field(
                name="üë§ Utilisateur",
                value=f"{user.mention} (`{user.id}`)",
                inline=True
            )

            embed.add_field(
                name="üëë Ajout√© par",
                value=ctx.author.mention,
                inline=True
            )

            embed.set_thumbnail(url=user.avatar.url if user.avatar else None)
            embed.set_footer(
                text="Cet utilisateur peut maintenant utiliser toutes les commandes de propri√©taire")
            embed.timestamp = discord.utils.utcnow()

            await ctx.send(embed=embed)
            print(
                f"üëë OWNER ADD: {user.name} ({user_id}) ajout√© par {ctx.author} ({ctx.author.id})")
        else:
            await ctx.send("‚ùå Erreur lors de l'ajout du propri√©taire. V√©rifiez les permissions du fichier.")

    @owner.command(name="remove", help="Supprime un propri√©taire (ID Discord)")
    async def owner_remove(self, ctx, user_id: int = None):
        """Supprime un utilisateur de la liste des propri√©taires"""
        if not is_bot_owner(ctx.author.id):
            await ctx.send("‚ùå Cette commande est r√©serv√©e aux propri√©taires du bot.")
            return

        if user_id is None:
            await ctx.send("‚ùå Veuillez sp√©cifier l'ID Discord de l'utilisateur √† supprimer.\n"
                           "Exemple: `!owner remove 123456789012345678`")
            return

        # Emp√™cher l'auto-suppression
        if user_id == ctx.author.id:
            await ctx.send("‚ùå Vous ne pouvez pas vous retirer vous-m√™me de la liste des propri√©taires.")
            return

        # V√©rifier si l'utilisateur est propri√©taire
        if not is_bot_owner(user_id):
            await ctx.send("‚ö†Ô∏è Cet utilisateur n'est pas dans la liste des propri√©taires.")
            return

        # Emp√™cher de supprimer le dernier propri√©taire
        owners = get_bot_owners()
        if len(owners) <= 1:
            await ctx.send("‚ùå Impossible de supprimer le dernier propri√©taire. Ajoutez d'abord un autre propri√©taire.")
            return

        # R√©cup√©rer les infos de l'utilisateur
        try:
            user = await self.bot.fetch_user(user_id)
            user_name = user.name
        except:
            user_name = f"ID: {user_id}"

        # Supprimer le propri√©taire
        if remove_bot_owner(user_id):
            embed = discord.Embed(
                title="üóëÔ∏è Propri√©taire Supprim√©",
                description=f"**{user_name}** a √©t√© retir√© de la liste des propri√©taires du bot.",
                color=discord.Color.orange()
            )

            embed.add_field(
                name="üë§ Utilisateur",
                value=f"{user_name} (`{user_id}`)",
                inline=True
            )

            embed.add_field(
                name="üëë Supprim√© par",
                value=ctx.author.mention,
                inline=True
            )

            embed.set_footer(
                text="Cet utilisateur ne peut plus utiliser les commandes de propri√©taire")
            embed.timestamp = discord.utils.utcnow()

            await ctx.send(embed=embed)
            print(
                f"üóëÔ∏è OWNER REMOVE: {user_name} ({user_id}) supprim√© par {ctx.author} ({ctx.author.id})")
        else:
            await ctx.send("‚ùå Erreur lors de la suppression du propri√©taire. V√©rifiez les permissions du fichier.")

    @owner.command(name="check", help="V√©rifie si un utilisateur est propri√©taire")
    async def owner_check(self, ctx, user_id: int = None):
        """V√©rifie si un utilisateur est propri√©taire du bot"""
        if not is_bot_owner(ctx.author.id):
            await ctx.send("‚ùå Cette commande est r√©serv√©e aux propri√©taires du bot.")
            return

        if user_id is None:
            # V√©rifier pour l'utilisateur qui tape la commande
            user_id = ctx.author.id

        # R√©cup√©rer les infos de l'utilisateur
        try:
            user = await self.bot.fetch_user(user_id)
            user_name = f"**{user.name}**"
            avatar_url = user.avatar.url if user.avatar else None
        except:
            user_name = f"**ID: {user_id}**"
            avatar_url = None

        is_owner = is_bot_owner(user_id)

        embed = discord.Embed(
            title="üîç V√©rification de Propri√©taire",
            color=discord.Color.green() if is_owner else discord.Color.red()
        )

        embed.add_field(
            name="üë§ Utilisateur",
            value=f"{user_name} (`{user_id}`)",
            inline=False
        )

        embed.add_field(
            name="üëë Statut",
            value="‚úÖ **Propri√©taire du bot**" if is_owner else "‚ùå **Pas propri√©taire**",
            inline=False
        )

        if avatar_url:
            embed.set_thumbnail(url=avatar_url)

        embed.set_footer(text=f"V√©rification effectu√©e par {ctx.author}")
        embed.timestamp = discord.utils.utcnow()

        await ctx.send(embed=embed)


async def setup(bot):
    await bot.add_cog(OwnerManagementPrefixe(bot))
